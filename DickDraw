-- Локальный скрипт, который будет работать только у клиента

local player = game.Players.LocalPlayer
local gui = Instance.new("ScreenGui")
gui.Name = "c0wka dick draw" -- Название GUI
gui.Parent = player:WaitForChild("PlayerGui")
gui.ResetOnSpawn = false -- Отключаем сброс GUI при респавне

-- Создание основного квадрата
local squareFrame = Instance.new("Frame")
squareFrame.Size = UDim2.new(0, 500, 0, 600) -- Изменение размера на 500x600
squareFrame.Position = UDim2.new(0.5, -250, 0.5, -300) -- Центрируем по экрану
squareFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0) -- Черный фон
squareFrame.BackgroundTransparency = 0.7 -- Задний фон на 70% прозрачный (30% непрозрачности)
squareFrame.BorderSizePixel = 0 -- Убираем стандартную границу
squareFrame.Parent = gui

-- Закругление углов квадрата
local uicorner = Instance.new("UICorner")
uicorner.CornerRadius = UDim.new(0, 15) -- Закругляем углы
uicorner.Parent = squareFrame

-- Текст "c0wka dick draw"
local titleText = Instance.new("TextLabel")
titleText.Text = "c0wka dick draw"
titleText.Size = UDim2.new(1, 0, 0, 50) -- Размер текста
titleText.Position = UDim2.new(0, 0, 0, 0) -- Позиция в верхней части квадрата
titleText.BackgroundTransparency = 0.5 -- Прозрачность фона текста
titleText.TextColor3 = Color3.new(1, 1, 1) -- Белый цвет текста
titleText.TextScaled = true -- Масштабирование текста
titleText.Font = Enum.Font.SourceSansBold -- Жирный шрифт
titleText.ZIndex = 11 -- Повышаем Z-индекс, чтобы текст был поверх всех элементов
titleText.Parent = squareFrame

-- Создание внутреннего квадрата с закругленными краями
local roundedSquare = Instance.new("Frame")
roundedSquare.Size = UDim2.new(1, -20, 1, -70) -- Отступы для обводки и текста
roundedSquare.Position = UDim2.new(0, 10, 0, 60) -- Смещаем внутренний квадрат ниже текста
roundedSquare.BackgroundTransparency = 1 -- Прозрачный фон
roundedSquare.Parent = squareFrame

-- Закругление углов внутреннего квадрата
local uicornerInner = Instance.new("UICorner")
uicornerInner.CornerRadius = UDim.new(0, 15) -- Закругляем углы
uicornerInner.Parent = roundedSquare

-- Создание обводки с RGB эффектом
local outline = Instance.new("Frame")
outline.Size = UDim2.new(1, 20, 1, 20) -- Увеличиваем размер обводки для учета отступов
outline.Position = UDim2.new(0, -10, 0, 50) -- Смещаем обводку влево и вверх для учета отступов и текста
outline.BackgroundTransparency = 1 -- Прозрачная обводка
outline.ZIndex = 10 -- Повышаем Z-индекс, чтобы обводка была поверх всех элементов
outline.Parent = squareFrame

-- Добавление RGB градиента к обводке
local gradient = Instance.new("UIGradient")
gradient.Rotation = 90
gradient.Parent = outline

-- Создание рамки для обводки с RGB эффектом
local function createOutlinePart()
    local part = Instance.new("Frame")
    part.Size = UDim2.new(1, 0, 0, 1)
    part.Position = UDim2.new(0, 0, 0, 0)
    part.BorderSizePixel = 0
    part.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    part.Parent = outline
    
    local partGradient = Instance.new("UIGradient")
    partGradient.Rotation = 90
    partGradient.Parent = part
    
    return part, partGradient
end

local topOutline, topGradient = createOutlinePart()
topOutline.AnchorPoint = Vector2.new(0, 0)

local bottomOutline, bottomGradient = createOutlinePart()
bottomOutline.Position = UDim2.new(0, 0, 1, -1)
bottomOutline.AnchorPoint = Vector2.new(0, 1)

local leftOutline, leftGradient = createOutlinePart()
leftOutline.Size = UDim2.new(0, 1, 1, 0)
leftOutline.Position = UDim2.new(0, 0, 0, 0)
leftOutline.AnchorPoint = Vector2.new(0, 0)

local rightOutline, rightGradient = createOutlinePart()
rightOutline.Size = UDim2.new(0, 1, 1, 0)
rightOutline.Position = UDim2.new(1, -1, 0, 0)
rightOutline.AnchorPoint = Vector2.new(1, 0)

-- Функция для обновления цветов RGB градиента
local function updateGradient()
    local startTime = tick()
    while true do
        local elapsedTime = tick() - startTime
        local hue = (elapsedTime % 10) / 10
        local color1 = Color3.fromHSV(hue, 1, 1)
        local color2 = Color3.fromHSV((hue + 0.1) % 1, 1, 1)
        
        gradient.Color = ColorSequence.new(color1, color2)
        topGradient.Color = ColorSequence.new(color1, color2)
        bottomGradient.Color = ColorSequence.new(color1, color2)
        leftGradient.Color = ColorSequence.new(color1, color2)
        rightGradient.Color = ColorSequence.new(color1, color2)
        
        wait(0.1)
    end
end

coroutine.wrap(updateGradient)()

-- Переменная для состояния видимости
local isVisible = true

-- Функция для переключения видимости GUI
local function toggleVisibility()
    if isVisible then
        squareFrame.Visible = false
    else
        squareFrame.Visible = true
    end
    isVisible = not isVisible
end

-- Обработка нажатия клавиши Left Ctrl
game:GetService("UserInputService").InputBegan:Connect(function(input, gameProcessedEvent)
    if input.KeyCode == Enum.KeyCode.LeftControl and not gameProcessedEvent then
        toggleVisibility()
    end
end)

-- Функция для перемещения GUI
local isDragging = false
local dragInput, dragStart, startPos

local function update(input)
    local delta = input.Position - dragStart
    local position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    squareFrame.Position = position
end

squareFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        isDragging = true
        dragStart = input.Position
        startPos = squareFrame.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                isDragging = false
            end
        end)
    end
end)

squareFrame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

game:GetService("UserInputService").InputChanged:Connect(function(input)
    if input == dragInput and isDragging then
        update(input)
    end
end)

-- Создание списка игроков
local playerListFrame = Instance.new("Frame")
playerListFrame.Size = UDim2.new(0, 480, 0, 300) -- Размер списка игроков
playerListFrame.Position = UDim2.new(0.5, -240, 0.5, -210) -- Подняли список игроков выше
playerListFrame.BackgroundTransparency = 1 -- Прозрачный фон
playerListFrame.Parent = roundedSquare

local scrollFrame = Instance.new("ScrollingFrame")
scrollFrame.Size = UDim2.new(1, 0, 1, 0)
scrollFrame.BackgroundTransparency = 1
scrollFrame.ScrollBarThickness = 10
scrollFrame.Parent = playerListFrame

local uiListLayout = Instance.new("UIListLayout")
uiListLayout.Padding = UDim.new(0, 5)
uiListLayout.Parent = scrollFrame

local selectedPlayerName = nil

local function updatePlayerList()
    for _, child in ipairs(scrollFrame:GetChildren()) do
        if child:IsA("TextButton") then
            child:Destroy()
        end
    end

    for _, player in ipairs(game.Players:GetPlayers()) do
        local playerNameLabel = Instance.new("TextButton")
        playerNameLabel.Text = player.Name
        playerNameLabel.Size = UDim2.new(1, 0, 0, 30)
        playerNameLabel.BackgroundTransparency = 0.5
        playerNameLabel.TextColor3 = Color3.new(1, 1, 1)
        playerNameLabel.TextScaled = true
        playerNameLabel.Parent = scrollFrame
        
        playerNameLabel.MouseButton1Click:Connect(function()
            selectedPlayerName = player.Name
            print("Selected player: " .. selectedPlayerName)
        end)
    end
end

game.Players.PlayerAdded:Connect(function(player)
    updatePlayerList()
end)

game.Players.PlayerRemoving:Connect(function(player)
    updatePlayerList()
end)

updatePlayerList()

-- Кнопка "Draw Dick"
local drawDickButton = Instance.new("TextButton")
drawDickButton.Text = "Draw Dick"
drawDickButton.Size = UDim2.new(1, 0, 0, 50)
drawDickButton.Position = UDim2.new(0.5, -240, 0.5, 160) -- Позиция под списком игроков
drawDickButton.BackgroundTransparency = 0.5
drawDickButton.TextColor3 = Color3.new(1, 1, 1)
drawDickButton.TextScaled = true
drawDickButton.Parent = roundedSquare

drawDickButton.MouseButton1Click:Connect(function()
    -- Заменяем действие на предоставленный скрипт с заменой TARGET на выбранного игрока
    local args = {
        [1] = "SprayPaint"
    }
    game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Extras"):WaitForChild("ReplicateToy"):InvokeServer(unpack(args))
    
    for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
        if v.Name == "SprayPaint" then
            v.Parent = game.Players.LocalPlayer.Character
        end
    end
    
    local targetPlayer = game.Players:FindFirstChild(selectedPlayerName) -- Используем выбранного игрока
    if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
        local args = {
            [1] = 93569507204466,
            [2] = Enum.NormalId.Top,
            [3] = 5,
            [4] = targetPlayer.Character.HumanoidRootPart,
            [5] = targetPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, -1.1, -2.5)
        }
        game:GetService("Players").LocalPlayer.Character.SprayPaint.Remote:FireServer(unpack(args))
    else
        print("Target player not found or missing HumanoidRootPart.")
    end
end)

-- Включаем скрипт только для локального игрока
if not game:IsLoaded() then
    game.Loaded:Wait()
end
